import { useState, useEffect, useContext } from 'react'
import { useParams, Link, useNavigate } from 'react-router-dom'
import axiosInstance from '../axiosInstance'
import { AuthContext } from '../AuthProvider'
import Review from './Review'
import ContRec from './ContRec'

const BookDetail = () => {
    const { id } = useParams()
    const { isLoggedIn } = useContext(AuthContext)
    const navigate = useNavigate()
    const [book, setBook] = useState(null)
    const [loading, setLoading] = useState(true)
    const [notification, setNotification] = useState(null)

    useEffect(() => {
        if (id) {
            // –î–æ–¥–∞—î–º–æ –∫–Ω–∏–≥—É –¥–æ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏—Ö –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –¥–µ—Ç–∞–ª–µ–π
            addBookToViewed(parseInt(id))
            fetchBookDetails()
        }
    }, [id])

    // –°–ª—É—Ö–∞—á –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–µ–π—Ç–∏–Ω–≥—É –∫–Ω–∏–≥–∏
    useEffect(() => {
        const handleRatingUpdate = () => {
            fetchBookDetails()
        }

        window.addEventListener('ratingUpdated', handleRatingUpdate)
        
        return () => {
            window.removeEventListener('ratingUpdated', handleRatingUpdate)
        }
    }, [])

    // Auto-hide notification after 3 seconds
    useEffect(() => {
        if (notification) {
            const timer = setTimeout(() => {
                setNotification(null)
            }, 3000)
            return () => clearTimeout(timer)
        }
    }, [notification])

    // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–Ω–∏–≥–∏ –¥–æ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏—Ö –∑ —Ç–µ—Ä–º—ñ–Ω–æ–º –∂–∏—Ç—Ç—è 1 –¥–µ–Ω—å
    const addBookToViewed = (bookId) => {
        const now = new Date().getTime()
        const expiryTime = 24 * 60 * 60 * 1000 // 1 –¥–µ–Ω—å –≤ –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∞—Ö
        
        // –û—Ç—Ä–∏–º—É—î–º–æ —ñ—Å–Ω—É—é—á—ñ –¥–∞–Ω—ñ
        let viewedData = localStorage.getItem('viewedBooks')
        let viewedBooks = []
        
        if (viewedData) {
            try {
                const parsed = JSON.parse(viewedData)
                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –Ω–µ –∑–∞—Å—Ç–∞—Ä—ñ–ª—ñ –¥–∞–Ω—ñ
                if (parsed.expiry && now < parsed.expiry) {
                    viewedBooks = Array.isArray(parsed.books) ? parsed.books : []
                }
            } catch (error) {
                console.log('Invalid viewed books data, resetting')
            }
        }
        
        // –í–∏–¥–∞–ª—è—î–º–æ –∫–Ω–∏–≥—É –∑ –ø–æ—Ç–æ—á–Ω–æ—ó –ø–æ–∑–∏—Ü—ñ—ó, —è–∫—â–æ –≤–æ–Ω–∞ –≤–∂–µ —î
        const filteredBooks = viewedBooks.filter(id => id !== bookId)
        
        // –î–æ–¥–∞—î–º–æ –∫–Ω–∏–≥—É –Ω–∞ –ø–æ—á–∞—Ç–æ–∫
        const updatedBooks = [bookId, ...filteredBooks]
        
        // –û–±–º–µ–∂—É—î–º–æ –¥–æ 5 –æ—Å—Ç–∞–Ω–Ω—ñ—Ö –∫–Ω–∏–≥
        const limitedBooks = updatedBooks.slice(0, 5)
        
        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∑ —Ç–µ—Ä–º—ñ–Ω–æ–º –∂–∏—Ç—Ç—è
        const dataToStore = {
            books: limitedBooks,
            expiry: now + expiryTime
        }
        
        localStorage.setItem('viewedBooks', JSON.stringify(dataToStore))
        
        // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥—ñ—é –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π
        window.dispatchEvent(new CustomEvent('viewedBooksUpdated', { 
            detail: { viewedBooks: limitedBooks } 
        }))
    }

    const showNotification = (message, type = 'success') => {
        setNotification({ message, type })
    }

    const fetchBookDetails = async () => {
        try {
            const response = await axiosInstance.get(`/books/${id}/`)
            setBook(response.data)
        } catch (error) {
            console.error('Error fetching book details:', error)
        } finally {
            setLoading(false)
        }
    }

    const addToCart = async () => {
        if (!isLoggedIn) {
            showNotification('–£–≤—ñ–π–¥—ñ—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É, —â–æ–± –¥–æ–¥–∞—Ç–∏ –∫–Ω–∏–≥—É –¥–æ –∫–æ—à–∏–∫–∞', 'warning')
            setTimeout(() => navigate('/login'), 1500)
            return
        }

        try {
            await axiosInstance.post('/cart/add/', {
                book: book.id,
                quantity: 1
            })

            showNotification('‚úÖ –ö–Ω–∏–≥—É –¥–æ–¥–∞–Ω–æ –¥–æ –∫–æ—à–∏–∫–∞!', 'success')
            window.dispatchEvent(new CustomEvent('cartUpdated'))
        } catch (error) {
            console.error('Error adding to cart:', error)
            showNotification('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ –¥–æ –∫–æ—à–∏–∫–∞', 'error')
        }
    }

    const buyNow = async () => {
        if (!isLoggedIn) {
            showNotification('–£–≤—ñ–π–¥—ñ—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –ø–æ–∫—É–ø–∫–∏', 'warning')
            setTimeout(() => navigate('/login'), 1500)
            return
        }

        try {
            await axiosInstance.post('/cart/add/', {
                book: book.id,
                quantity: 1
            })

            window.dispatchEvent(new CustomEvent('cartUpdated'))
            showNotification('‚úÖ –ö–Ω–∏–≥—É –¥–æ–¥–∞–Ω–æ –¥–æ –∫–æ—à–∏–∫–∞!', 'success')
            navigate('/checkout')
        } catch (error) {
            console.error('Error adding to cart before checkout:', error)
            showNotification('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ –¥–æ –∫–æ—à–∏–∫–∞', 'error')
        }
    }

    const handleWishlistToggle = async () => {
        if (!isLoggedIn) {
            showNotification('–£–≤—ñ–π–¥—ñ—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É, —â–æ–± –¥–æ–¥–∞—Ç–∏ –¥–æ –±–∞–∂–∞–Ω–æ–≥–æ', 'warning')
            setTimeout(() => navigate('/login'), 1500)
            return
        }

        try {
            const response = await axiosInstance.post('/wishlist/toggle/', { book_id: book.id })
            
            setBook(prevBook => ({
                ...prevBook,
                is_in_wishlist: response.data.in_wishlist
            }))

            showNotification(
                response.data.in_wishlist ? '‚ù§Ô∏è –î–æ–¥–∞–Ω–æ –¥–æ –±–∞–∂–∞–Ω–æ–≥–æ' : 'üíî –í–∏–¥–∞–ª–µ–Ω–æ –∑ –±–∞–∂–∞–Ω–æ–≥–æ',
                'success'
            )
        } catch (error) {
            console.error('Error toggling wishlist:', error)
            showNotification('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ –¥–æ –±–∞–∂–∞–Ω–æ–≥–æ', 'error')
        }
    }

    const renderStars = (rating) => {
        const stars = []
        const maxStars = 5
        
        for (let i = 1; i <= maxStars; i++) {
            const isActive = i <= (rating || 0)
            
            stars.push(
                <i
                    key={i}
                    className={`${isActive ? 'fas' : 'far'} fa-star text-warning`}
                />
            )
        }
        
        return stars
    }

    if (loading) {
        return (
            <div className="container mt-5">
                <div className="text-center">
                    <div className="spinner-border text-primary" role="status">
                        <span className="visually-hidden">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</span>
                    </div>
                </div>
            </div>
        )
    }

    if (!book) {
        return (
            <div className="container mt-5">
                <div className="text-center">
                    <h2>–ö–Ω–∏–≥—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</h2>
                    <Link to="/" className="btn btn-primary">–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞ –≥–æ–ª–æ–≤–Ω—É</Link>
                </div>
            </div>
        )
    }

    return (
        <div className="container mt-4">
            {notification && (
                <div className={`alert alert-${notification.type === 'success' ? 'success' : notification.type === 'error' ? 'danger' : 'warning'} alert-dismissible fade show position-fixed`} 
                     style={{ top: '20px', right: '20px', zIndex: 1050, minWidth: '300px' }}>
                    {notification.message}
                    <button 
                        type="button" 
                        className="btn-close" 
                        onClick={() => setNotification(null)}
                    ></button>
                </div>
            )}

            <nav aria-label="breadcrumb">
                <ol className="breadcrumb">
                    <li className="breadcrumb-item"><Link to="/">–ì–æ–ª–æ–≤–Ω–∞</Link></li>
                    <li className="breadcrumb-item active">{book.title}</li>
                </ol>
            </nav>

            <div className="book-detail-container">
                <div className="row">
                    <div className="col-lg-4 col-md-5">
                        <div className="book-detail-image">
                            {book.image ? (
                                <img src={book.image} className="img-fluid rounded shadow" alt={book.title} />
                            ) : (
                                <div className="bg-light rounded p-5 text-center">
                                    <i className="fas fa-book fa-5x text-muted"></i>
                                </div>
                            )}
                        </div>
                    </div>

                    <div className="col-lg-8 col-md-7">
                        <div className="row">
                            <div className="col-lg-8">
                                <div className="book-info">
                                    <h1 className="display-6 fw-bold mb-3 text-primary">{book.title}</h1>

                                    <div className="mb-3">
                                        <h6 className="text-muted fw-semibold">–ê–≤—Ç–æ—Ä(–∏):</h6>
                                        <p className="fs-5 text-dark">{book.author?.map(a => a.name).join(', ')}</p>
                                    </div>

                                    <div className="mb-3">
                                        <h6 className="text-muted fw-semibold">–ñ–∞–Ω—Ä–∏:</h6>
                                        <div>
                                            {book.genres?.map(genre => (
                                                <span key={genre.id} className="badge bg-primary me-2 mb-1">
                                                    {genre.name}
                                                </span>
                                            ))}
                                        </div>
                                    </div>

                                    <div className="mb-3">
                                        <h6 className="text-muted fw-semibold">–†–µ–π—Ç–∏–Ω–≥:</h6>
                                        <div className="d-flex align-items-center">
                                            {renderStars(book.average_rating || 0)}
                                            <span className="ms-2 fw-semibold">
                                                {book.average_rating ? `${book.average_rating}/5 (${book.rating_count} –≤—ñ–¥–≥—É–∫—ñ–≤)` : '–ü–æ–∫–∏ –±–µ–∑ —Ä–µ–π—Ç–∏–Ω–≥—É'}
                                            </span>
                                        </div>
                                    </div>

                                    {book.price && (
                                        <div className="mb-3">
                                            <h6 className="text-muted fw-semibold">–¶—ñ–Ω–∞:</h6>
                                            <p className="fs-3 text-success fw-bold mb-0">
                                                <i className="fas fa-hryvnia-sign"></i> {book.price} –≥—Ä–Ω
                                            </p>
                                        </div>
                                    )}
                                </div>
                            </div>

                            <div className="col-lg-4">
                                <div className="book-actions-vertical">
                                    <div className="book-availability">
                                        {book.is_available ? (
                                            <div className="btn btn-success w-100 mb-3 availability-status">
                                                <i className="fas fa-check"></i> –í –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ
                                            </div>
                                        ) : (
                                            <div className="btn btn-danger w-100 mb-3 availability-status">
                                                <i className="fas fa-times"></i> –ù–µ–º–∞—î –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ
                                            </div>
                                        )}
                                    </div>

                                    {isLoggedIn && book.is_available && (
                                        <div className="book-action-buttons">
                                            <button
                                                onClick={buyNow}
                                                className="btn btn-soft-primary"
                                            >
                                                <i className="fas fa-shopping-bag"></i> –ö—É–ø–∏—Ç–∏ –∑–∞—Ä–∞–∑
                                            </button>
                                            <button
                                                onClick={addToCart}
                                                className="btn btn-soft-success"
                                            >
                                                <i className="fas fa-shopping-cart"></i> –î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞
                                            </button>
                                            <button
                                                onClick={handleWishlistToggle}
                                                className={`btn ${book.is_in_wishlist ? 'btn-soft-danger' : 'btn-outline-danger'}`}
                                            >
                                                <i className={`${book.is_in_wishlist ? 'fas' : 'far'} fa-heart`}></i>
                                                {book.is_in_wishlist ? ' –í –±–∞–∂–∞–Ω–æ–º—É' : ' –î–æ –±–∞–∂–∞–Ω–æ–≥–æ'}
                                            </button>
                                        </div>
                                    )}

                                    {!isLoggedIn && (
                                        <div className="alert alert-info">
                                            <i className="fas fa-info-circle"></i> 
                                            <Link to="/login" className="text-decoration-none ms-1">
                                                –£–≤—ñ–π–¥—ñ—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É
                                            </Link> –¥–ª—è –ø–æ–∫—É–ø–∫–∏ —Ç–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤ –±–∞–∂–∞–Ω–µ
                                        </div>
                                    )}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div className="book-detail-info mt-4">
                    <h5 className="mb-3 text-primary">
                        <i className="fas fa-info-circle"></i> –î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
                    </h5>
                    <div className="row">
                        <div className="col-md-6 col-lg-4 mb-2">
                            <small className="text-muted">–†—ñ–∫ –≤–∏–¥–∞–Ω–Ω—è:</small>
                            <p className="fw-semibold">{book.year}</p>
                        </div>
                        {book.language && (
                            <div className="col-md-6 col-lg-4 mb-2">
                                <small className="text-muted">–ú–æ–≤–∞:</small>
                                <p className="fw-semibold">{book.language}</p>
                            </div>
                        )}
                        {book.page_count && (
                            <div className="col-md-6 col-lg-4 mb-2">
                                <small className="text-muted">–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç–æ—Ä—ñ–Ω–æ–∫:</small>
                                <p className="fw-semibold">{book.page_count}</p>
                            </div>
                        )}
                        {book.publisher && (
                            <div className="col-md-6 col-lg-4 mb-2">
                                <small className="text-muted">–í–∏–¥–∞–≤–Ω–∏—Ü—Ç–≤–æ:</small>
                                <p className="fw-semibold">{book.publisher}</p>
                            </div>
                        )}
                        {book.book_format && (
                            <div className="col-md-6 col-lg-4 mb-2">
                                <small className="text-muted">–§–æ—Ä–º–∞—Ç:</small>
                                <p className="fw-semibold">{book.book_format}</p>
                            </div>
                        )}
                        {book.cover_type && (
                            <div className="col-md-6 col-lg-4 mb-2">
                                <small className="text-muted">–¢–∏–ø –æ–±–∫–ª–∞–¥–∏–Ω–∫–∏:</small>
                                <p className="fw-semibold">{book.cover_type}</p>
                            </div>
                        )}
                        {book.original_name && (
                            <div className="col-md-6 col-lg-4 mb-2">
                                <small className="text-muted">–û—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∞ –Ω–∞–∑–≤–∞:</small>
                                <p className="fw-semibold">{book.original_name}</p>
                            </div>
                        )}
                        {book.weight && (
                            <div className="col-md-6 col-lg-4 mb-2">
                                <small className="text-muted">–í–∞–≥–∞:</small>
                                <p className="fw-semibold">{book.weight} –∫–≥</p>
                            </div>
                        )}
                    </div>
                </div>
            </div>

            <div className="row mt-4">
                <div className="col-12">
                    <div className="card">
                        <div className="card-header">
                            <h5><i className="fas fa-align-left"></i> –û–ø–∏—Å –∫–Ω–∏–≥–∏</h5>
                        </div>
                        <div className="card-body">
                            <p className="card-text fs-6 lh-lg">{book.description}</p>
                        </div>
                    </div>
                </div>
            </div>

            {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó */}
            <div className="row mt-4">
                <div className="col-12">
                    <ContRec />
                </div>
            </div>

            {/* –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –≤—ñ–¥–≥—É–∫—ñ–≤ */}
            <Review 
                bookId={parseInt(id)} 
                onNotification={showNotification} 
            />
        </div>
    )
}

export default BookDetail